set testag = $HOME/Dropbox/research/cgwave/bin/testAugmentedKrylov 



*******************************************
***** Thurs Nov 28, 2024

Continue optimizations for AGMRES


$testag -Nx=1000 -numToDeflate=5 -maxit=200 -initialGuess=0 -useFunction=1 -krylovType=gmres

AugmentedKrylov:gmres: matVect= 1.14e+00(s) total cpu =  1.22e+00(s)
Time to solve =  1.22e+00(s), timeFotMatVect= 1.14e+00 (s)
number of gmres iterations=205, number of mat-vects=206
maxErr= 1.48e-02


We have already sped up bicgstab: 
$testag -Nx=1000 -numToDeflate=5 -maxit=200 -initialGuess=0 -useFunction=1 -krylovType=bicgstab

Time to solve =  2.18e+00(s), timeFotMatVect= 2.17e+00 (s)
number of bicgstab iterations=406, number of mat-vects=406
maxErr= 3.47e-03

*******************************************
***** Mon Nov 25, 2024

START MEASURE TIMINGS:

$testag -Nx=1000 -numToDeflate=100 -maxit=200 -initialGuess=0 -useFunction=1 -krylovType=gmres




$testag -Nx=1000 -numToDeflate=5 -maxit=200 -initialGuess=0 -useFunction=1 -krylovType=bicgstab

$testag -Nx=1000 -numToDeflate=5 -maxit=200 -initialGuess=0 -useFunction=1 -krylovType=gmres

optimize mat-vect and dotProduct
AUG-GMRES: it=200, || r ||_2h = 3.40e+00, ratio=9.82e-01, (matrixIsAFunction=1)
AugmentedKrylov:gmres: total cpu =  1.27e+00(s)
Time to solve =  1.27e+00(s), timeFotMatVect= 1.11e+00 (s)
number of gmres iterations=205, number of mat-vects=206
maxErr= 1.48e-02


COMPILE BOTH -O3: 
AugmentedKrylov:gmres: total cpu =  1.44e+00(s)
Time to solve =  1.44e+00(s), timeFotMatVect= 1.12e+00 (s)
number of gmres iterations=205, number of mat-vects=206


COMPILE testAugmentedKrylov.C  with -O
AugmentedKrylov:gmres: total cpu =  1.51e+00(s)
Time to solve =  1.51e+00(s), timeFotMatVect= 1.11e+00 (s)
number of gmres iterations=205, number of mat-vects=206


START:
AugmentedKrylov:gmres: total cpu =  3.74e+00(s)
Time to solve =  3.74e+00(s), timeFotMatVect= 3.24e+00 (s)
number of gmres iterations=205, number of mat-vects=206


$testag -Nx=50 -numToDeflate=5 -maxit=200 -initialGuess=0 -useFunction=1 -krylovType=gmres

useOpt=0: 
AUG-GMRES: it= 42, || r ||_2h = 4.81e-09, ratio=1.87e-01, (matrixIsAFunction=1)
AUG-GMRES: it= 43, || r ||_2h = 5.40e-10, ratio=1.12e-01, (matrixIsAFunction=1)
INFO: in AuGmres: H(k+1,k)= 2.08e-27 *happy break down*. Solution must have converged.
AUG-GMRES: it= 44, || r ||_2h = 1.29e-40, ratio=2.38e-31, (matrixIsAFunction=1)
AugmentedKrylov:gmres: total cpu =  7.64e-03(s)
Time to solve =  7.67e-03(s), timeFotMatVect= 7.73e-04 (s)
number of gmres iterations=49, number of mat-vects=50
maxErr= 4.77e-15


*******************************************
***** Thus Oct 21, 2024

START ON AUGMENTED Bi-CG-STAB

$testag -Nx=50 -numToDeflate=5 -maxit=200 -initialGuess=0 -useFunction=1 -krylovType=bicgstab

recycled BiCGStab: it= 67 rel-Norm= 1.57e-10 ratio= 0.25

AUG-GMRES: it= 43, || r ||_2h = 5.40e-10, ratio=1.12e-01, (matrixIsAFunction=1)

>> matlab:
recycled BiCGStab: it= 67 rel-Norm= 1.57e-10 ratio= 0.25
rBiCGStab:  max-err= 4.16e-11, its=  68.0, mat-vects=its=68

>>> DEFLATE 1
$testag -Nx=10 -numToDeflate=1 -maxit=15 -initialGuess=0 -useFunction=1 -krylovType=bicgstab

+++++++ MATLAB 
>> testBiCGStab -m=9 -extra=1 -useApprox=0 -sol=1 -idebug=1
m=9, dx=0.1
myBiCGStab: max-err= 5.55e-16, its=  10.0, matvects=its*2=20
bicgstab:   max-err= 5.55e-16, its=   8.5, mat-vects=its*2=17
bicgstabl:  max-err= 6.66e-16, its=   4.2, mat-vects=its*4=17
bNorm=50.2874, ||x0||=0, ||r||=50.2874
recycled BiCGStab: it=  1 rel-Norm= 2.78e-01 ratio= 0.28
recycled BiCGStab: it=  2 rel-Norm= 1.30e-01 ratio= 0.47
recycled BiCGStab: it=  3 rel-Norm= 5.26e-02 ratio= 0.40
recycled BiCGStab: it=  4 rel-Norm= 1.95e-02 ratio= 0.37
recycled BiCGStab: it=  5 rel-Norm= 3.09e-03 ratio= 0.16
recycled BiCGStab: it=  6 rel-Norm= 4.93e-04 ratio= 0.16
recycled BiCGStab: it=  7 rel-Norm= 4.32e-05 ratio= 0.09
rBiCGStab:  max-err= 3.33e-16, its=   9.5, mat-vects=its*2=19


>>>>>>>>> NO Deflate : agrees: 
$testag -Nx=10 -numToDeflate=0 -maxit=15 -initialGuess=0 -useFunction=1 -krylovType=bicgstab

AugmentedKrylov::solveBiCGStab: m=9, numAugmented=0, matrixIsAFunction=1, maxit=15, tol= 1.00e-10
 bNorm=50.2874, rNorm=  5.03e+01, resv(0)=  1.00e+00
recycled BiCGStab: it=  2 rel-Norm= 4.79e-01 ratio= 0.48
recycled BiCGStab: it=  4 rel-Norm= 3.39e-01 ratio= 0.71
recycled BiCGStab: it=  6 rel-Norm= 2.52e-01 ratio= 0.74
recycled BiCGStab: it=  8 rel-Norm= 1.84e-01 ratio= 0.73
recycled BiCGStab: it= 10 rel-Norm= 1.02e-01 ratio= 0.56
recycled BiCGStab: it= 12 rel-Norm= 5.35e-02 ratio= 0.52
recycled BiCGStab: it= 14 rel-Norm= 1.78e-02 ratio= 0.33
recycled BiCGStab: it= 16 rel-Norm= 4.15e-03 ratio= 0.23
maxErr= 5.00e-16


+++++++ MATLAB
testBiCGStab -m=9 -extra=0 -useApprox=0 -sol=1 -idebug=1
m=9, dx=0.1
myBiCGStab: max-err= 5.55e-16, its=  10.0, matvects=its*2=20
bicgstab:   max-err= 5.55e-16, its=   8.5, mat-vects=its*2=17
bicgstabl:  max-err= 6.66e-16, its=   4.2, mat-vects=its*4=17
bNorm=50.2874, ||x0||=0, ||r||=50.2874
recycled BiCGStab: it=  1 rel-Norm= 4.79e-01 ratio= 0.48
recycled BiCGStab: it=  2 rel-Norm= 3.39e-01 ratio= 0.71
recycled BiCGStab: it=  3 rel-Norm= 2.52e-01 ratio= 0.74
recycled BiCGStab: it=  4 rel-Norm= 1.84e-01 ratio= 0.73
recycled BiCGStab: it=  5 rel-Norm= 1.02e-01 ratio= 0.56
recycled BiCGStab: it=  6 rel-Norm= 5.35e-02 ratio= 0.52
recycled BiCGStab: it=  7 rel-Norm= 1.78e-02 ratio= 0.33
recycled BiCGStab: it=  8 rel-Norm= 4.15e-03 ratio= 0.23
rBiCGStab:  max-err= 5.55e-16, its=  10.0, mat-vects=its*2=20


*******************************************
***** Wed Oct 20, 2024

START ON AUGMENTED Bi-CG-STAB

$testag -Nx=10 -numToDeflate=2 -maxit=15 -initialGuess=0 -useFunction=1 -krylovType=bicgstab


BiCGSTAB: (No deflated)
$testag -Nx=10 -numToDeflate=0 -maxit=15 -initialGuess=0 -useFunction=1 -krylovType=bicgstab
recycled BiCGStab: it=  2 rel-Norm= 8.02e+00 ratio= 0.48
recycled BiCGStab: it=  4 rel-Norm= 5.68e+00 ratio= 0.71
recycled BiCGStab: it=  6 rel-Norm= 4.23e+00 ratio= 0.74
recycled BiCGStab: it=  8 rel-Norm= 3.08e+00 ratio= 0.73
recycled BiCGStab: it= 10 rel-Norm= 1.72e+00 ratio= 0.56
recycled BiCGStab: it= 12 rel-Norm= 8.96e-01 ratio= 0.52
recycled BiCGStab: it= 14 rel-Norm= 2.99e-01 ratio= 0.33
recycled BiCGStab: it= 16 rel-Norm= 6.95e-02 ratio= 0.23
Done: solution x
    (    0) (    1) (    2) (    3) (    4) (    5) (    6) (    7) (    8) 
(0)   0.641   0.825   0.961   1.011   0.961   0.826   0.641   0.450   0.286 
number of GMRES iterations=18
resVect
    (      0) (      1) (      2) (      3) (      4) (      5) (      6) (      7) (      8) (      9) (     10) (     11) (     12) (     13) (     14) (     15) (     16) (     17) 
(0)  1.68e+01  1.22e+01  8.02e+00  7.03e+00  5.68e+00  4.95e+00  4.23e+00  3.51e+00  3.08e+00  2.04e+00  1.72e+00  1.14e+00  8.96e-01  3.65e-01  2.99e-01  8.43e-02  6.95e-02  3.92e-15 
xTrue
    (    0) (    1) (    2) (    3) (    4) (    5) (    6) (    7) (    8) 
(0)   0.641   0.825   0.961   1.011   0.961   0.826   0.641   0.450   0.286 
maxErr= 5.00e-16



$testag -Nx=10 -numToDeflate=0 -maxit=7 -initialGuess=0 -useFunction=1 -krylovType=bicgstab

$testag -Nx=10 -numToDeflate=2 -maxit=7 -initialGuess=0 -useFunction=1 -krylovType=bicgstab

$testag -Nx=10 -numToDeflate=2 -maxit=7 -initialGuess=0 -useFunction=1

AugmentedKrylov::solve: m=9, numToDeflate=2, matrixIsAFunction=1, maxit=7, tol= 1.00e-10
AUG-GMRES: Compute A*W(:,0) (Augmented vectors)
AUG-GMRES: Compute A*W(:,1) (Augmented vectors)
AUG-GMRES: it=  2, || r ||_2h = 2.28e+00, ratio=4.57e-01, (matrixIsAFunction=1)
AUG-GMRES: it=  3, || r ||_2h = 1.07e+00, ratio=4.71e-01, (matrixIsAFunction=1)
AUG-GMRES: it=  4, || r ||_2h = 3.08e-01, ratio=2.86e-01, (matrixIsAFunction=1)
AUG-GMRES: it=  5, || r ||_2h = 1.07e-01, ratio=3.46e-01, (matrixIsAFunction=1)
AUG-GMRES: it=  6, || r ||_2h = 2.48e-02, ratio=2.32e-01, (matrixIsAFunction=1)
INFO: in AuGmres: H(k+1,k)= 1.67e-29 *happy break down*. Solution must have converged.
AUG-GMRES: it=  7, || r ||_2h = 1.39e-33, ratio=5.59e-32, (matrixIsAFunction=1)
Done: solution x
    (    0) (    1) (    2) (    3) (    4) (    5) (    6) (    7) (    8) 
(0)   0.641   0.825   0.961   1.011   0.961   0.826   0.641   0.450   0.286 
number of GMRES iterations=9
resVect
    (      0) (      1) (      2) (      3) (      4) (      5) (      6) (      7) (      8) 
(0)  4.99e+00  4.99e+00  4.99e+00  2.28e+00  1.07e+00  3.08e-01  1.07e-01  2.48e-02  1.39e-33 
xTrue
    (    0) (    1) (    2) (    3) (    4) (    5) (    6) (    7) (    8) 
(0)   0.641   0.825   0.961   1.011   0.961   0.826   0.641   0.450   0.286 
maxErr= 7.77e-16



*******************************************
***** Tues/Wed Sept 10/11, 2024

CHANGES TO AugmentedGmres:

+++ NEW: NOTE: *new* form of residual -- ratio's agree

$testag -Nx=10 -numToDeflate=2 -maxit=7 -initialGuess=0 -useFunction=1
AUG-GMRES: Compute A*W(:,0) (Augmented vectors)
AUG-GMRES: Compute A*W(:,1) (Augmented vectors)
AUG-GMRES: it=  2, || r ||_2h = 2.28e+00, ratio=4.57e-01, (matrixIsAFunction=1)
AUG-GMRES: it=  3, || r ||_2h = 1.07e+00, ratio=4.71e-01, (matrixIsAFunction=1)
AUG-GMRES: it=  4, || r ||_2h = 3.08e-01, ratio=2.86e-01, (matrixIsAFunction=1)
AUG-GMRES: it=  5, || r ||_2h = 1.07e-01, ratio=3.46e-01, (matrixIsAFunction=1)
AUG-GMRES: it=  6, || r ||_2h = 2.48e-02, ratio=2.32e-01, (matrixIsAFunction=1)
INFO: in AuGmres: H(k+1,k)= 1.67e-29 *happy break down*. Solution must have converged.
AUG-GMRES: it=  7, || r ||_2h = 1.39e-33, ratio=5.59e-32, (matrixIsAFunction=1)
AGmres: jp=9, iteration=8
resv (*NEW WAY*)
    (        0) (        1) (        2) (        3) (        4) (        5) (        6) (        7) (        8) 
(0)  4.9929e+00  4.9929e+00  4.9929e+00  2.2802e+00  1.0743e+00  3.0772e-01  1.0659e-01  2.4775e-02  1.3859e-33 
Done: solution x
    (    0) (    1) (    2) (    3) (    4) (    5) (    6) (    7) (    8) 
(0)   0.641   0.825   0.961   1.011   0.961   0.826   0.641   0.450   0.286 
number of GMRES iterations=9
resVect
    (      0) (      1) (      2) (      3) (      4) (      5) (      6) (      7) (      8) 
(0)  4.99e+00  4.99e+00  4.99e+00  2.28e+00  1.07e+00  3.08e-01  1.07e-01  2.48e-02  1.39e-33 
xTrue
    (    0) (    1) (    2) (    3) (    4) (    5) (    6) (    7) (    8) 
(0)   0.641   0.825   0.961   1.011   0.961   0.826   0.641   0.450   0.286 
maxErr= 7.77e-16



$testag -Nx=10 -numToDeflate=2 -maxit=5 -initialGuess=0 -useFunction=1
$testag -Nx=10 -numToDeflate=2 -maxit=5 -initialGuess=0 -useFunction=0 

AugmentedGmres::solve: m=9, numToDeflate=2, matrixIsAFunction=0, maxit=5, tol= 1.00e-10
AUG-GMRES: Compute A*W(:,0) (Augmented vectors)
AUG-GMRES: Compute A*W(:,1) (Augmented vectors)
AUG-GMRES: n=  3, || r_n ||_2h = 4.99e+00, ratio=4.99e+00, (matrixIsAFunction=0)
AUG-GMRES: n=  4, || r_n ||_2h = 2.28e+00, ratio=4.57e-01, (matrixIsAFunction=0)
AUG-GMRES: n=  5, || r_n ||_2h = 1.07e+00, ratio=4.71e-01, (matrixIsAFunction=0)
AUG-GMRES: n=  6, || r_n ||_2h = 3.08e-01, ratio=2.86e-01, (matrixIsAFunction=0)
AUG-GMRES: n=  7, || r_n ||_2h = 1.07e-01, ratio=3.46e-01, (matrixIsAFunction=0)
Done: solution x
    (    0) (    1) (    2) (    3) (    4) (    5) (    6) (    7) (    8) 
(0)   0.641   0.825   0.960   1.010   0.963   0.830   0.642   0.447   0.283 
number of GMRES iterations=6
resVect
    (      0) (      1) (      2) (      3) (      4) (      5) 
(0)  1.00e+00  1.00e+00  4.99e+00  2.28e+00  1.07e+00  3.08e-01 
xTrue
    (    0) (    1) (    2) (    3) (    4) (    5) (    6) (    7) (    8) 
(0)   0.641   0.825   0.961   1.011   0.961   0.826   0.641   0.450   0.286 
maxErr= 4.35e-03



++++++++++  OLD:

$testag -Nx=10 -numToDeflate=2 -maxit=5 -initialGuess=0 -useFunction=1
$testag -Nx=10 -numToDeflate=2 -maxit=5 -initialGuess=0 -useFunction=0 

AugmentedGmres::solve: m=9, numToDeflate=2, matrixIsAFunction=1, maxit=5, tol= 1.00e-10
AUG-GMRES: n=  2, || r_n ||/|| b || = 1.36e-01, ratio=4.57e-01 (matrixIsAFunction=1)
AUG-GMRES: n=  3, || r_n ||/|| b || = 6.41e-02, ratio=4.71e-01 (matrixIsAFunction=1)
AUG-GMRES: n=  4, || r_n ||/|| b || = 1.84e-02, ratio=2.86e-01 (matrixIsAFunction=1)
AUG-GMRES: n=  5, || r_n ||/|| b || = 6.36e-03, ratio=3.46e-01 (matrixIsAFunction=1)


AugmentedGmres::solve: m=9, numToDeflate=2, maxit=5, tol= 1.00e-10
AUG-GMRES: n=  2, || r_n ||/|| b || = 1.36e-01, ratio=4.57e-01 (matrixIsAFunction=0)
AUG-GMRES: n=  3, || r_n ||/|| b || = 6.41e-02, ratio=4.71e-01 (matrixIsAFunction=0)
AUG-GMRES: n=  4, || r_n ||/|| b || = 1.84e-02, ratio=2.86e-01 (matrixIsAFunction=0)
AUG-GMRES: n=  5, || r_n ||/|| b || = 6.36e-03, ratio=3.46e-01 (matrixIsAFunction=0)





*******************************************
***** Tues Aug 20, 2024


DOES deflate zero work ??
$testag -Nx=10  -initialGuess=0 -useFunction=1 -numToDeflate=0 -maxit=5

$testag -Nx=10 -numToDeflate=2 -maxit=5 -initialGuess=0 -useFunction=1


*******************************************
***** Mon Aug 19, 2024

TEST AUGMENTED GMRES

COMPARE TO MATLAB

USE matrix free: **WORKS**

$testag -Nx=10 -numToDeflate=2 -maxit=5 -initialGuess=0 -useFunction=1
$testag -Nx=10 -numToDeflate=2 -maxit=5 -initialGuess=0 -useFunction=0 

AugmentedGmres::solve: m=9, numToDeflate=2, matrixIsAFunction=1, maxit=5, tol= 1.00e-10
AUG-GMRES: n=  2, || r_n ||/|| b || = 1.36e-01, ratio=4.57e-01 (matrixIsAFunction=1)
AUG-GMRES: n=  3, || r_n ||/|| b || = 6.41e-02, ratio=4.71e-01 (matrixIsAFunction=1)
AUG-GMRES: n=  4, || r_n ||/|| b || = 1.84e-02, ratio=2.86e-01 (matrixIsAFunction=1)
AUG-GMRES: n=  5, || r_n ||/|| b || = 6.36e-03, ratio=3.46e-01 (matrixIsAFunction=1)


AugmentedGmres::solve: m=9, numToDeflate=2, maxit=5, tol= 1.00e-10
AUG-GMRES: n=  2, || r_n ||/|| b || = 1.36e-01, ratio=4.57e-01 (matrixIsAFunction=0)
AUG-GMRES: n=  3, || r_n ||/|| b || = 6.41e-02, ratio=4.71e-01 (matrixIsAFunction=0)
AUG-GMRES: n=  4, || r_n ||/|| b || = 1.84e-02, ratio=2.86e-01 (matrixIsAFunction=0)
AUG-GMRES: n=  5, || r_n ||/|| b || = 6.36e-03, ratio=3.46e-01 (matrixIsAFunction=0)


set testag = $HOME/Dropbox/research/cgwave/bin/testAugmentedGmres

$testag -Nx=10 -numToDeflate=2 -maxit=5 -initialGuess=0 -includeBCs=1


$testag -Nx=10 -numToDeflate=2 -maxit=3


*******************************************
***** Fri Dec 22, 2023

TEST NEW HIERARCHICAL LAPSQ

>>>>>>>>>>>>>> 3D >>>>>>>>>>>>

WIGGLEY 3D 
testCoeff -caseName=wiggley3d -numRes=3 -tz=trig

>>> res=0: max relative error in LapSq_{2h}(uExact) =  2.93e+00 (computed with difference operators).
>>> res=0: max relative error in LapSq_{2h}(uExact) =  2.93e+00 (Coeff from DELTA).
>>> res=0: max relative error in LapSq_{2h}(uExact) =  2.93e+00 (Coeff from Hierarchical).

>>> res=1: max relative error in LapSq_{2h}(uExact) =  3.40e-01 (computed with difference operators).
>>> res=1: max relative error in LapSq_{2h}(uExact) =  3.40e-01 (Coeff from DELTA).
>>> res=1: max relative error in LapSq_{2h}(uExact) =  3.40e-01 (Coeff from Hierarchical).

>>> res=2: max relative error in LapSq_{2h}(uExact) =  7.80e-02 (computed with difference operators).
>>> res=2: max relative error in LapSq_{2h}(uExact) =  7.80e-02 (Coeff from DELTA).
>>> res=2: max relative error in LapSq_{2h}(uExact) =  7.80e-02 (Coeff from Hierarchical).

ORTHO SPHERE
testCoeff -caseName=orthoSphere -numRes=2 -tz=trig

>>> res=0: max relative error in LapSq_{2h}(uExact) =  3.37e-02 (computed with difference operators).
>>> res=0: max relative error in LapSq_{2h}(uExact) =  3.37e-02 (Coeff from DELTA).
>>> res=0: max relative error in LapSq_{2h}(uExact) =  3.37e-02 (Coeff from Hierarchical).
>>> res=1: max relative error in LapSq_{2h}(uExact) =  8.92e-03 (computed with difference operators).



QUARTER CYL
testCoeff -caseName=quarterCyl -numRes=2 -tz=trig

>>> res=0: max relative error in LapSq_{2h}(uExact) =  2.87e-02 (computed with difference operators).
>>> res=0: max relative error in LapSq_{2h}(uExact) =  2.87e-02 (Coeff from DELTA).
>>> res=0: max relative error in LapSq_{2h}(uExact) =  2.87e-02 (Coeff from Hierarchical).

>>> res=1: max relative error in LapSq_{2h}(uExact) =  7.36e-03 (computed with difference operators).
>>> res=1: max relative error in LapSq_{2h}(uExact) =  7.36e-03 (Coeff from DELTA).
>>> res=1: max relative error in LapSq_{2h}(uExact) =  7.36e-03 (Coeff from Hierarchical).

NON BOX -- OK 
testCoeff -caseName=nonBox -numRes=2 -tz=trig

>>> res=0: max relative error in LapSq_{2h}(uExact) =  1.63e-02 (computed with difference operators).
>>> res=0: max relative error in LapSq_{2h}(uExact) =  1.63e-02 (Coeff from DELTA).

>>> res=0: max relative error in LapSq_{2h}(uExact) =  1.63e-02 (Coeff from Hierarchical).

>>> res=1: max relative error in LapSq_{2h}(uExact) =  4.10e-03 (computed with difference operators).
>>> res=1: max relative error in LapSq_{2h}(uExact) =  4.10e-03 (Coeff from DELTA).
>>> res=1: max relative error in LapSq_{2h}(uExact) =  4.10e-03 (Coeff from Hierarchical).


>>>>>>>>>>>>>>>>> 2D >>>>>>>>>>>>>>>.
testCoeff -caseName=wiggley -numRes=2 -tz=trig

>>> res=1: max relative error in LapSq_{2h}(uExact) =  6.70e-02 (computed with difference operators).
     grid=0 I1=[0,64] I2=[0,64] I3=[0,0]-----------
lapSqCoeff(m1,m2,m3) (i1,i2,i3)=(  2,  2,  0):
m3= 0
m2=-2, m1=[-2, 2] :    2.49e+04    1.30e+06    1.35e+07   -1.32e+06    3.83e+04 
m2=-1, m1=[-2, 2] :    1.14e+06    2.18e+07   -1.09e+08    3.27e+07   -1.44e+06 
m2= 0, m1=[-2, 2] :    1.30e+07   -1.07e+08    2.74e+08   -1.09e+08    1.34e+07 
m2= 1, m1=[-2, 2] :   -1.12e+06    3.24e+07   -1.13e+08    2.26e+07    1.41e+06 
m2= 2, m1=[-2, 2] :    2.31e+04   -1.30e+06    1.45e+07    1.33e+06    3.62e+04 
... done grid=0
>>> res=1: max relative error in LapSq_{2h}(uExact) =  6.70e-02 (Coeff from DELTA).
>>> res=1: max relative error in LapSq_{2h}(uExact) =  6.70e-02 (Coeff from Hierarchical).


testCoeff -caseName=nonSquare -numRes=2 -tz=trig

>>> res=0: max relative error in LapSq_{2h}(uExact) =  6.41e-03 (computed with difference operators).
>>>> stenciWidth=5, stencilSize=26, numberOfGhostLines=2

 ---------coefficientsByDelta: Eval coefficients of Laplacian-squared by the delta approach -------
     grid=0 I1=[0,16] I2=[0,16] I3=[0,0]-----------
lapSqCoeff(m1,m2,m3) (i1,i2,i3)=(  2,  2,  0):
m3= 0
m2=-2, m1=[-2, 2] :    0.00e+00    0.00e+00    6.55e+04    0.00e+00    0.00e+00 
m2=-1, m1=[-2, 2] :    0.00e+00    1.31e+05   -5.24e+05    1.31e+05    0.00e+00 
m2= 0, m1=[-2, 2] :    6.55e+04   -5.24e+05    1.31e+06   -5.24e+05    6.55e+04 
m2= 1, m1=[-2, 2] :    0.00e+00    1.31e+05   -5.24e+05    1.31e+05    0.00e+00 
m2= 2, m1=[-2, 2] :    0.00e+00    0.00e+00    6.55e+04    0.00e+00    0.00e+00 
... done grid=0
>>> res=0: max relative error in LapSq_{2h}(uExact) =  6.41e-03 (Coeff from DELTA).

 ***ADD Fourth-order in time coefficients to the Implicit Matrix ****

implicit matrix: order=4 CURVLINEAR ADD (Lap_2h)^2

 DONE: Compute LapSq(u) : Max-rel-err= 0.00e+00
>>> res=0: max relative error in LapSq_{2h}(uExact) =  6.41e-03 (Coeff from CHAIN RULE).

*******************************************
***** Thur Dec 21, 2023


test coefficients in Implicit order 4 scheme

>>>>>>>>> WIGGLEY 

testCoeff -caseName=wiggley -numRes=2 -tz=trig


>>> res=0: max relative error in LapSq_{2h}(uExact) =  2.76e-01 (computed with difference operators).
>>> res=0: max relative error in LapSq_{2h}(uExact) =  2.76e-01 (Coeff from DELTA).
>>> res=0: max relative error in LapSq_{2h}(uExact) =  9.01e-01 (Coeff from CHAIN RULE).

>>> res=1: max relative error in LapSq_{2h}(uExact) =  6.70e-02 (computed with difference operators).
>>> res=1: max relative error in LapSq_{2h}(uExact) =  6.70e-02 (Coeff from DELTA).
>>> res=1: max relative error in LapSq_{2h}(uExact) =  8.96e-01 (Coeff from CHAIN RULE).


Diffference approximation to LapSq seems second order
>>> res=0: max relative error in LapSq_{2h}(uExact) =  2.76e-01 (computed with difference operators).
>>> res=1: max relative error in LapSq_{2h}(uExact) =  6.70e-02 (computed with difference operators).


testCoeff -noplot -caseName=wiggley

CHAIN RULE COEFF: 
 DONE: Max-rel-err= 3.99e+01

 ---------coefficientsByDelta: Eval coefficients of Laplacian-squared by the delta approach -------
     grid=0 I1=[2,2] I2=[2,2] I3=[0,0]-----------
lapSqCoeff(m1,m2,m3) (i1,i2,i3)=(  2,  2,  0):
m3= 0
m2=-2, m1=[-2, 2] :    2.58e+03    1.14e+05    9.03e+05   -1.18e+05    4.74e+03 
m2=-1, m1=[-2, 2] :    9.11e+04    1.31e+06   -7.31e+06    2.27e+06   -1.27e+05 
m2= 0, m1=[-2, 2] :    8.08e+05   -6.85e+06    1.81e+07   -7.03e+06    8.44e+05 
m2= 1, m1=[-2, 2] :   -8.83e+04    2.24e+06   -7.69e+06    1.40e+06    1.23e+05 
m2= 2, m1=[-2, 2] :    2.19e+03   -1.14e+05    1.03e+06    1.17e+05    4.22e+03 
... done grid=0

 ***ADD Fourth-order in time coefficients to the Implicit Matrix ****

implicit matrix: order=4 CURVLINEAR : **CHECK ME**
(i1,i2,i3)=(  2,  2,  0) : lapSq =   1.34e+01, lapSqe =   9.61e+00, relErr=  3.97e-01
lapSqCoeff(m1,m2,m3) and relative errors (i1,i2,i3)=(  2,  2,  0):
m3= 0
m2=-2, m1=[-2, 2] :    0.00e+00    1.16e+05    9.07e+05   -1.16e+05    0.00e+00       1.41e-04    1.36e-04    2.15e-04    1.08e-04    2.59e-04 
m2=-1, m1=[-2, 2] :    1.08e+05    1.29e+06   -7.31e+06    2.26e+06   -1.08e+05       9.01e-04    1.42e-03    7.47e-05    7.18e-04    1.04e-03 
m2= 0, m1=[-2, 2] :    8.18e+05   -6.95e+06    1.83e+07   -7.16e+06    8.51e+05       5.38e-04    5.84e-03    1.22e-02    6.93e-03    4.18e-04 
m2= 1, m1=[-2, 2] :   -1.08e+05    2.36e+06   -7.91e+06    1.53e+06    1.08e+05       1.05e-03    6.75e-03    1.22e-02    7.09e-03    8.36e-04 
m2= 2, m1=[-2, 2] :    0.00e+00   -1.16e+05    1.04e+06    1.16e+05    0.00e+00       1.20e-04    1.36e-04    6.33e-04    7.53e-05    2.31e-04 
>>>(i1,i2,i3)=(  2,  2,  0) : maxRelErr in coefficients =  1.22e-02

