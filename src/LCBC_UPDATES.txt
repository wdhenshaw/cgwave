===== Information regarding LCBC updates =====

==== May 16, 2023 Update =====

- The LCBC class now supports 2D or 3D overset grid cases where an interpolation boundary intersects a physical boundary.

==== Nov 21, 2022 Update =====

- Updated functions that retrieve derivatives of Lagrange Polynomial hierarchically in order to improve efficiency.
- The new functions are updated for the Dirichlet case only. 
- Note that the previous version works for Neumann boundary conditions. The current version however is not setup for Neumann BCs yet. 
- Note that order 8 functions give a memory error due to limited memory on the stack. I will work on a fix for this by using static preallocation of memory. 

Added files: 

LagrangeDerivFunctions.C/.h (contains the functions that generate derivatives of Lagrange Polynomials)
LCBC_newFun.C               (contains new functions that form the LCBC matrices: faces, edges and corners)
tangentialDerivs_3D....C    (to compute tangential derivatives needed in the LCBC procedure)
derivatives.h               (contains macros that compute finite difference approximations of derivatives)

Files deleted: 

numericalDeriv.C/.h        

==== JULY 24 Update ============

- LCBC class goes to order 8 in accuracy
- LCBC class supports the input of flexible grid sizes of data grid functions (coefficients, forcing, boundary)
- Faster implementation due to significant changes in numerical differentiation (can be made faster still)
- LCBC class supports Neumann BCs on Cartesian Grids
- LCBC class supports Neumann BCs on Curvilinear Grids if the boundary operator is provided as a function pointer. (Note: I plan to change this to data grid function input but this needs time. We need to decide on an appropriate time to do that)
- Bug fix: in LCBC_data.C file, the function fixData (which extrapolates values of forcing and coefficients on extra ghost points needed) had incorrect limits in two of the for loops which caused the 6th-order LCBC implementation to gives order 5 accuracy on a box domain.

====================================================================================================

- LCBC class now supports periodic BCs with Dirichlet BCs as long as the solution is provided at the periodic boundary from ((-p), ..., (numOfGridPoints + p)). Edges and corners of two adjacent periodic faces must be updated before using LCBC (The current class does not update a periodic-periodic edge or corner.) - Apr 22, 2022 

- Coefficient implementation inside LCBC class updates coefficients at physical faces only instead of all faces. - Apr 19, 2022 

             
===== Needed LCBC files =====

LCBC.h              (contains the LCBC class)
LCBC.C              (contains initialize function and updateGhost function)
LCBC1.C             (contains functions that set up the LCBC matrices at a face)
LCBC2.C             (contains functions that set up the RHS for the LCBC system at a face)
LCBC_corner.C       (contains functions for the LCBC implementation at a 2D corner or 3D edge)
LCBC_vertex.C       (contains functions for the LCBC implementation at a 3D corner)
LCBC_data.C         (contains functions that handle the data functions and the LcbcData class)
LCBCmacros.h        (contains the macros used in the LCBC class)

grid.h              (grid class used in LCBC class)
utility.C           (utility functions used in LCBC class)
utility.h   

Also needed: (WDH)
LCBC_param.h
LCBC_data.h             

===== header to use LCBC class =====

#include "LCBC.h"
#include "LCBC_data.h"  (to define the LcbcData class in getLcbcData function)



