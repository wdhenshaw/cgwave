#
# Measure convergence rates for CgWaveHoltz
#
#     conv.p waveHoltzTests.conv -option=[boxHelmholtz] -cg=[gridName] -alwaysCompute=[0|1] -ng=<num-refinement-levels>
#
$check="cgWaveHoltz.check";
# 
# Set default parameters: 
$cg="square"; 
$option="boxHelmholtz"; 
#
# $cmdFile="boxHelmholtz.cmd"; # command file
$cmdFile="trigHelmholtz.cmd"; # command file
#
$CGBUILDPREFIX=$ENV{CGBUILDPREFIX};
$CGWAVE=$ENV{CGWAVE}; # directory for cgWave repo
#
$cgwh = "$CGWAVE/bin/cgwh";  # command for cgWaveHoltz
#
# $cmdDir="$ENV{CG}/mx/cmd";  
# $cmdDir="$CGWAVE/cmd";  
$cmdDir="$CGWAVE/runsWaveHoltz/trigHelmholtz";  
$tf=.5; $tp=.1; $order = "2"; $ng=3; $interp="i"; $cfl=.9; $radius=.5; $bg="box"; $ts="implicit"; 
$kx=1; $ky=1; $kz=1; 
$solver="krylov"; $tol=1e-5; 
$omega=2; 
@freq = ();  # this must be null for GetOptions to work, defaults are given below
# $kx=1; $ky=0; $kz=0; 
$upwind=0;  # 1= UPW dissipation
$errorNorm=0; 
$alwaysCompute=1; $saveVectorErrors=0; 
$numberOfDimensions=2; 
$solverh="yale"; $maxith=2000; $rtolh=1.e-6; $atolh=1.e-5; $restart=50; $iluh=5; # parameters for direct Helmholtz solver
$solveri="yale"; $maxiti=2000; $rtoli=1.e-6; $atoli=1.e-5; # parameters for implicit time-stepping solver
#
GetOptions( "name=s"=>\$name,"order=i"=>\$order,"ng=i"=>\$ng,"tf=f"=>\$tf,"interp=s"=>\$interp,"upwind=i"=>\$upwind,\
            "fixed=s"=>\$fixed,"cfl=f"=>\$cfl,"alwaysCompute=i"=>\$alwaysCompute,"tp=f"=>\$tp,\
            "errorNorm=i"=>\$errorNorm,"cg=s"=>\$cg,"option=s"=>\$option,"tol=f"=>\$tol,"ts=s"=>\$ts,\
            "kx=f"=>\$kx,"ky=f"=>\$ky,"kz=f"=>\$kz,"omega=f"=>\$omega,"solver=s"=>\$solver,"freq=f{1,}"=>\@freq,\
            "solverh=s"=>\$solverh,"rtolh=f"=>\$rtolh,"atolh=f"=>\$atolh,"maxith=i"=>\$maxith,"restart=i"=>\$restart,"iluh=i"=>\$iluh,\
            "solveri=s"=>\$solveri,"rtoli=f"=>\$rtoli,"atoli=f"=>\$atoli,"maxiti=i"=>\$maxiti );
# --------------------------------------------------------------------------
$name=$option;
if( $freq[0] eq "" ){ @freq=(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15); }
# 
$omega = $freq[0]; 
# if( $option eq "planeWave" ){ $cmdFile="planeWave.cmd";  }
# if( $option eq "helmholtz" ){ $cmdFile="helmholtz.cmd";  }
# 
if( $cg =~ /nonSquarenp/ ){ $bg="square"; }
if( $cg =~ /nonSquare/ ){ $bg="square"; }
if( $cg =~ /nonBoxnpp/ ){ $bg="box"; }
# 
if( $cg =~ /box*/ || $cg =~ /nonBox*/ || $cg =~ /unitBox*/ || $cg =~ /unitNonBox*/ || $cg =~ /refineBox*/ || $cg =~ /refineNonBox*/ ){ $numberOfDimensions=3; }
$extraLabel ="";
if( $ad4 > 0 ){ $extraLabel = "Upwind"; }
#
if( $errorNorm eq 0 ){ $normName = "max"; }elsif( $errorNorm eq 1 ){ $normName = "L1";}\
   elsif( $errorNorm eq 2 ){ $normName = "L2"; }else{ $normName="UnknownNorm"; }
# 
$outputFile=$name . ucfirst($solver) . ucfirst($cg) . "$extraLabel" . "Order$order" . $normName . "NormConvTable.tex"; 
#
$caseName=$name . ucfirst($solver) . ucfirst($cg) . "Order$order";
$caseName .= $normName . "Norm";
#
#
#
$numberOfComponents=1;
# 
$title= "grid  \& N \&  \$ u \$ ";
#
$labelMethod=$solver;
$caption= "\\caption\{CgWaveHoltz, $name, $normName norm, solver=$solver, -kx=$kx -ky=$ky -kz=$kz, order=\$$order\$, \$t=$tf\$, cfl=\$$cfl\$, -ts=$ts, upwind=\$$upwind\$, freq[0]=$freq[0], tol=$tol,-solveri=$solveri -maxiti=$maxiti -rtoli=$rtoli -atoli=$atoli $date}\\label\{table:$name" . $solver . "Order$order$normName}"; 
# 
# use -go=krylov to solve with krylov
# use -go=direct to solve with direct solver
# use -go=both to solve with both
$options = "-kx=$kx -ky=$ky -kz=$kz -cfl=$cfl -numPeriods=4 -nf=1 -freq=$freq[0] $freq[1] $freq[2] -ts=$ts -dtMax=100 -adjustOmega=1 -orderInTime=2 -solver=none -upwind=$upwind -tol=$tol";
$options .= " -solveri=$solveri -maxiti=$maxiti -rtoli=$rtoli -atoli=$atoli";
$options .= " -go=$solver";
#
$suffix="";
if( ($upwind > 0 ) && ($order eq 4) ){ $suffix=".ng3"; }
if( ($upwind > 0 ) && ($order eq 6) ){ $suffix=".ng4"; }
$grid1=$cg . "2";   $gName1 = $cg . "e2.order$order$suffix"; 
$grid2=$cg . "4";   $gName2 = $cg . "e4.order$order$suffix"; 
$grid3=$cg . "8";   $gName3 = $cg . "e8.order$order$suffix"; 
$grid4=$cg . "16";  $gName4 = $cg . "e16.order$order$suffix"; 
$grid5=$cg . "32";  $gName5 = $cg . "e32.order$order$suffix"; 
$grid6=$cg . "64";  $gName6 = $cg . "e64.order$order$suffix"; 
# Special cases; 
if( $cg =~ /nonSquarenp/ ){\
$grid1=$cg . "1";   $gName1 = "nonSquare8np.order$order$suffix"; \
$grid2=$cg . "2";   $gName2 = "nonSquare16np.order$order$suffix"; \
$grid3=$cg . "4";   $gName3 = "nonSquare32np.order$order$suffix"; \
$grid4=$cg . "8";   $gName4 = "nonSquare64np.order$order$suffix"; \
$grid5=$cg . "16";  $gName5 = "nonSquare128np.order$order$suffix";\
$grid6=$cg . "32";  $gName6 = "nonSquare256np.order$order$suffix";\
}
if( $cg =~ /nonBoxnpp/ ){\
$grid1=$cg . "1";   $gName1 = "nonBox2npp.order$order$suffix"; \
$grid2=$cg . "2";   $gName2 = "nonBox4npp.order$order$suffix"; \
$grid3=$cg . "4";   $gName3 = "nonBox8npp.order$order$suffix"; \
$grid4=$cg . "8";   $gName4 = "nonBox16npp.order$order$suffix"; \
$grid5=$cg . "16";  $gName5 = "nonBox32npp.order$order$suffix";\
$grid6=$cg . "32";  $gName6 = "nonBox64npp.order$order$suffix";\
}
if( $cg =~ /box/ ){\
$grid1=$cg . "1";   $gName1 = "box1.order$order$suffix"; \
$grid2=$cg . "2";   $gName2 = "box2.order$order$suffix"; \
$grid3=$cg . "4";   $gName3 = "box4.order$order$suffix"; \
$grid4=$cg . "8";   $gName4 = "box8.order$order$suffix"; \
$grid5=$cg . "16";  $gName5 = "box16.order$order$suffix";\
$grid6=$cg . "32";  $gName6 = "box32.order$order$suffix";\
}
if( $cg =~ /boxp/ ){\
$grid1=$cg . "1";   $gName1 = "box1p.order$order$suffix"; \
$grid2=$cg . "2";   $gName2 = "box2p.order$order$suffix"; \
$grid3=$cg . "4";   $gName3 = "box4p.order$order$suffix"; \
$grid4=$cg . "8";   $gName4 = "box8p.order$order$suffix"; \
$grid5=$cg . "16";  $gName5 = "box16p.order$order$suffix";\
$grid6=$cg . "32";  $gName6 = "box32p.order$order$suffix";\
}
if( $cg =~ /square/ ){\
$grid1=$cg . "8";   $gName1 = "square8.order$order$suffix"; \
$grid2=$cg . "16";   $gName2 = "square16.order$order$suffix"; \
$grid3=$cg . "32";   $gName3 = "square32.order$order$suffix"; \
$grid4=$cg . "64";   $gName4 = "square64.order$order$suffix"; \
$grid5=$cg . "128";  $gName5 = "square128.order$order$suffix";\
$grid6=$cg . "256";  $gName6 = "square256.order$order$suffix";\
$grid7=$cg . "512";  $gName7 = "square512.order$order$suffix";\
$grid8=$cg . "1024"; $gName8 = "square1024.order$order$suffix";\
}
if( $cg =~ /squarep/ ){\
$grid1=$cg . "8";   $gName1 = "square8p.order$order$suffix"; \
$grid2=$cg . "16";   $gName2 = "square16p.order$order$suffix"; \
$grid3=$cg . "32";   $gName3 = "square32p.order$order$suffix"; \
$grid4=$cg . "64";   $gName4 = "square64p.order$order$suffix"; \
$grid5=$cg . "128";  $gName5 = "square128p.order$order$suffix";\
$grid6=$cg . "256";  $gName6 = "square256p.order$order$suffix";\
}
if( $cg =~ /nonSquare/ ){\
$grid1=$cg . "8";   $gName1 = "nonSquare8.order$order$suffix"; \
$grid2=$cg . "16";   $gName2 = "nonSquare16.order$order$suffix"; \
$grid3=$cg . "32";   $gName3 = "nonSquare32.order$order$suffix"; \
$grid4=$cg . "64";   $gName4 = "nonSquare64.order$order$suffix"; \
$grid5=$cg . "128";  $gName5 = "nonSquare128.order$order$suffix";\
$grid6=$cg . "256";  $gName6 = "nonSquare256.order$order$suffix";\
}
if( $cg =~ /nonSquarep/ ){\
$grid1=$cg . "8";   $gName1 = "nonSquare8p.order$order$suffix"; \
$grid2=$cg . "16";   $gName2 = "nonSquare16p.order$order$suffix"; \
$grid3=$cg . "32";   $gName3 = "nonSquare32p.order$order$suffix"; \
$grid4=$cg . "64";   $gName4 = "nonSquare64p.order$order$suffix"; \
$grid5=$cg . "128";  $gName5 = "nonSquare128p.order$order$suffix";\
$grid6=$cg . "256";  $gName6 = "nonSquare256p.order$order$suffix";\
}
# 
if( $ng > 0 ){ $grid=$grid1; $res=1;   $cmd="$cgwh -noplot $cmdDir/$cmdFile -g=$gName1 $options";  }
if( $ng > 1 ){ $grid=$grid2; $res=2;   $cmd="$cgwh -noplot $cmdDir/$cmdFile -g=$gName2 $options";}
if( $ng > 2 ){ $grid=$grid3; $res=4;   $cmd="$cgwh -noplot $cmdDir/$cmdFile -g=$gName3 $options";}
if( $ng > 3 ){ $grid=$grid4; $res=8;   $cmd="$cgwh -noplot $cmdDir/$cmdFile -g=$gName4 $options";}
if( $ng > 4 ){ $grid=$grid5; $res=16;  $cmd="$cgwh -noplot $cmdDir/$cmdFile -g=$gName5 $options";}
if( $ng > 5 ){ $grid=$grid6; $res=32;  $cmd="$cgwh -noplot $cmdDir/$cmdFile -g=$gName6 $options";}
if( $ng > 6 ){ $grid=$grid7; $res=64;  $cmd="$cgwh -noplot $cmdDir/$cmdFile -g=$gName7 $options";}
if( $ng > 7 ){ $grid=$grid8; $res=128; $cmd="$cgwh -noplot $cmdDir/$cmdFile -g=$gName8 $options";}
$closeFile="true";
# -------------------------------------------------------------------------------
exit
